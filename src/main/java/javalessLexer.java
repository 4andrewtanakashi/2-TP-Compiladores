// Generated from /home/shi/Documents/compiladores/trabalho_pratico/2-tp/src/main/java/javalessLexer.g4 by ANTLR 4.7.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class javalessLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ABS=1, EXT=2, PRI=3, PRO=4, PUB=5, CLA=6, THIS=7, NEW=8, NUL=9, IMP=10, 
		PAC=11, RET=12, SUP=13, IF=14, WHI=15, ELS=16, INS=17, INT=18, CHA=19, 
		VOI=20, BOO=21, STA=22, FAL=23, TRU=24, Error1=25, Error2=26, Error3=27, 
		Error4=28, Error5=29, Error6=30, Error7=31, Error8=32, Error9=33, Error10=34, 
		Error11=35, Identifier=36, NumR=37, Atrib=38, AtrArit=39, OpBool=40, OpUni=41, 
		OpArit=42, AND=43, EQL=44, LT=45, LTE=46, PLU=47, SUB=48, TIM=49, PPL=50, 
		SSB=51, NOT=52, VOP=53, VCL=54, KOP=55, KCL=56, AP=57, FP=58, Str=59, 
		EndL=60, PTR=61, COMA=62, NEWLINE=63, WS=64, Comment=65, LOWW=66, UPPW=67, 
		Numl=68, NNuml=69, WORD=70, MODV=71;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ABS", "EXT", "PRI", "PRO", "PUB", "CLA", "THIS", "NEW", "NUL", "IMP", 
			"PAC", "RET", "SUP", "IF", "WHI", "ELS", "INS", "INT", "CHA", "VOI", 
			"BOO", "STA", "FAL", "TRU", "Error1", "Error2", "Error3", "Error4", "Error5", 
			"Error6", "Error7", "Error8", "Error9", "Error10", "Error11", "Identifier", 
			"NumR", "Atrib", "AtrArit", "OpBool", "OpUni", "OpArit", "AND", "EQL", 
			"LT", "LTE", "PLU", "SUB", "TIM", "PPL", "SSB", "NOT", "VOP", "VCL", 
			"KOP", "KCL", "AP", "FP", "Str", "EndL", "PTR", "COMA", "NEWLINE", "WS", 
			"Comment", "LOWW", "UPPW", "Numl", "NNuml", "WORD", "MODV"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'abstract'", "'extends'", "'private'", "'protected'", "'public'", 
			"'class'", "'this'", "'new'", "'null'", "'import'", "'package'", "'return'", 
			"'super'", "'if'", "'while'", "'else'", "'instanceof'", "'int'", "'char'", 
			"'void'", "'boolean'", "'static'", "'false'", "'true'", null, "'abtract'", 
			null, "'privte'", "'cass'", null, null, null, "'instancof'", "'bool'", 
			null, null, null, "'='", "'+='", null, null, null, "'&&'", "'=='", "'>'", 
			"'<='", "'+'", "'-'", "'*'", "'++'", "'--'", "'!'", "'['", "']'", "'{'", 
			"'}'", "'('", "')'", null, "';'", "'.'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ABS", "EXT", "PRI", "PRO", "PUB", "CLA", "THIS", "NEW", "NUL", 
			"IMP", "PAC", "RET", "SUP", "IF", "WHI", "ELS", "INS", "INT", "CHA", 
			"VOI", "BOO", "STA", "FAL", "TRU", "Error1", "Error2", "Error3", "Error4", 
			"Error5", "Error6", "Error7", "Error8", "Error9", "Error10", "Error11", 
			"Identifier", "NumR", "Atrib", "AtrArit", "OpBool", "OpUni", "OpArit", 
			"AND", "EQL", "LT", "LTE", "PLU", "SUB", "TIM", "PPL", "SSB", "NOT", 
			"VOP", "VCL", "KOP", "KCL", "AP", "FP", "Str", "EndL", "PTR", "COMA", 
			"NEWLINE", "WS", "Comment", "LOWW", "UPPW", "Numl", "NNuml", "WORD", 
			"MODV"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public javalessLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "javalessLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2I\u023e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3"+
		"\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25"+
		"\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u0145\n\34\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\5\37\u0160\n\37\3 \3 \3"+
		" \3 \3 \3 \5 \u0168\n \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\5!\u0174\n!\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\7$\u0187\n$\f"+
		"$\16$\u018a\13$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\5$\u01a2\n$\3$\6$\u01a5\n$\r$\16$\u01a6\3%\3%\5%\u01ab\n"+
		"%\3%\3%\3%\7%\u01b0\n%\f%\16%\u01b3\13%\3&\3&\3&\3&\3&\3&\3&\3&\5&\u01bd"+
		"\n&\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\5)\u01c8\n)\3*\3*\3*\5*\u01cd\n*\3+\3"+
		"+\3+\5+\u01d2\n+\3,\3,\3,\3-\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61"+
		"\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\38\38\39\39\3:\3:\3;\3;\3<\3<\7<\u01fb\n<\f<\16<\u01fe\13<\3<\3<\3=\3"+
		"=\3>\3>\3?\3?\3@\5@\u0209\n@\3@\3@\6@\u020d\n@\r@\16@\u020e\3A\6A\u0212"+
		"\nA\rA\16A\u0213\3A\3A\3B\3B\3B\3B\7B\u021c\nB\fB\16B\u021f\13B\3B\3B"+
		"\3C\3C\3D\3D\3E\3E\3E\5E\u022a\nE\3E\6E\u022d\nE\rE\16E\u022e\3F\3F\3"+
		"F\3G\3G\6G\u0236\nG\rG\16G\u0237\3H\3H\3H\5H\u023d\nH\2\2I\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{"+
		"?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\3\2\6"+
		"\4\2&&aa\4\2$$^^\5\2\13\f\16\17\"\"\4\2\f\f\17\17\2\u0272\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2"+
		"\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}"+
		"\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2"+
		"\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f"+
		"\3\2\2\2\3\u0091\3\2\2\2\5\u009a\3\2\2\2\7\u00a2\3\2\2\2\t\u00aa\3\2\2"+
		"\2\13\u00b4\3\2\2\2\r\u00bb\3\2\2\2\17\u00c1\3\2\2\2\21\u00c6\3\2\2\2"+
		"\23\u00ca\3\2\2\2\25\u00cf\3\2\2\2\27\u00d6\3\2\2\2\31\u00de\3\2\2\2\33"+
		"\u00e5\3\2\2\2\35\u00eb\3\2\2\2\37\u00ee\3\2\2\2!\u00f4\3\2\2\2#\u00f9"+
		"\3\2\2\2%\u0104\3\2\2\2\'\u0108\3\2\2\2)\u010d\3\2\2\2+\u0112\3\2\2\2"+
		"-\u011a\3\2\2\2/\u0121\3\2\2\2\61\u0127\3\2\2\2\63\u012c\3\2\2\2\65\u012f"+
		"\3\2\2\2\67\u0144\3\2\2\29\u0146\3\2\2\2;\u014d\3\2\2\2=\u015f\3\2\2\2"+
		"?\u0167\3\2\2\2A\u0173\3\2\2\2C\u0175\3\2\2\2E\u017f\3\2\2\2G\u0188\3"+
		"\2\2\2I\u01aa\3\2\2\2K\u01bc\3\2\2\2M\u01be\3\2\2\2O\u01c0\3\2\2\2Q\u01c7"+
		"\3\2\2\2S\u01cc\3\2\2\2U\u01d1\3\2\2\2W\u01d3\3\2\2\2Y\u01d6\3\2\2\2["+
		"\u01d9\3\2\2\2]\u01db\3\2\2\2_\u01de\3\2\2\2a\u01e0\3\2\2\2c\u01e2\3\2"+
		"\2\2e\u01e4\3\2\2\2g\u01e7\3\2\2\2i\u01ea\3\2\2\2k\u01ec\3\2\2\2m\u01ee"+
		"\3\2\2\2o\u01f0\3\2\2\2q\u01f2\3\2\2\2s\u01f4\3\2\2\2u\u01f6\3\2\2\2w"+
		"\u01f8\3\2\2\2y\u0201\3\2\2\2{\u0203\3\2\2\2}\u0205\3\2\2\2\177\u020c"+
		"\3\2\2\2\u0081\u0211\3\2\2\2\u0083\u0217\3\2\2\2\u0085\u0222\3\2\2\2\u0087"+
		"\u0224\3\2\2\2\u0089\u0229\3\2\2\2\u008b\u0230\3\2\2\2\u008d\u0235\3\2"+
		"\2\2\u008f\u023c\3\2\2\2\u0091\u0092\7c\2\2\u0092\u0093\7d\2\2\u0093\u0094"+
		"\7u\2\2\u0094\u0095\7v\2\2\u0095\u0096\7t\2\2\u0096\u0097\7c\2\2\u0097"+
		"\u0098\7e\2\2\u0098\u0099\7v\2\2\u0099\4\3\2\2\2\u009a\u009b\7g\2\2\u009b"+
		"\u009c\7z\2\2\u009c\u009d\7v\2\2\u009d\u009e\7g\2\2\u009e\u009f\7p\2\2"+
		"\u009f\u00a0\7f\2\2\u00a0\u00a1\7u\2\2\u00a1\6\3\2\2\2\u00a2\u00a3\7r"+
		"\2\2\u00a3\u00a4\7t\2\2\u00a4\u00a5\7k\2\2\u00a5\u00a6\7x\2\2\u00a6\u00a7"+
		"\7c\2\2\u00a7\u00a8\7v\2\2\u00a8\u00a9\7g\2\2\u00a9\b\3\2\2\2\u00aa\u00ab"+
		"\7r\2\2\u00ab\u00ac\7t\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae\7v\2\2\u00ae"+
		"\u00af\7g\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7g\2\2"+
		"\u00b2\u00b3\7f\2\2\u00b3\n\3\2\2\2\u00b4\u00b5\7r\2\2\u00b5\u00b6\7w"+
		"\2\2\u00b6\u00b7\7d\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba"+
		"\7e\2\2\u00ba\f\3\2\2\2\u00bb\u00bc\7e\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be"+
		"\7c\2\2\u00be\u00bf\7u\2\2\u00bf\u00c0\7u\2\2\u00c0\16\3\2\2\2\u00c1\u00c2"+
		"\7v\2\2\u00c2\u00c3\7j\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7u\2\2\u00c5"+
		"\20\3\2\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c8\7g\2\2\u00c8\u00c9\7y\2\2\u00c9"+
		"\22\3\2\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7w\2\2\u00cc\u00cd\7n\2\2\u00cd"+
		"\u00ce\7n\2\2\u00ce\24\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7o\2\2\u00d1"+
		"\u00d2\7r\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5\7v\2\2"+
		"\u00d5\26\3\2\2\2\u00d6\u00d7\7r\2\2\u00d7\u00d8\7c\2\2\u00d8\u00d9\7"+
		"e\2\2\u00d9\u00da\7m\2\2\u00da\u00db\7c\2\2\u00db\u00dc\7i\2\2\u00dc\u00dd"+
		"\7g\2\2\u00dd\30\3\2\2\2\u00de\u00df\7t\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1"+
		"\7v\2\2\u00e1\u00e2\7w\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4\7p\2\2\u00e4"+
		"\32\3\2\2\2\u00e5\u00e6\7u\2\2\u00e6\u00e7\7w\2\2\u00e7\u00e8\7r\2\2\u00e8"+
		"\u00e9\7g\2\2\u00e9\u00ea\7t\2\2\u00ea\34\3\2\2\2\u00eb\u00ec\7k\2\2\u00ec"+
		"\u00ed\7h\2\2\u00ed\36\3\2\2\2\u00ee\u00ef\7y\2\2\u00ef\u00f0\7j\2\2\u00f0"+
		"\u00f1\7k\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3\7g\2\2\u00f3 \3\2\2\2\u00f4"+
		"\u00f5\7g\2\2\u00f5\u00f6\7n\2\2\u00f6\u00f7\7u\2\2\u00f7\u00f8\7g\2\2"+
		"\u00f8\"\3\2\2\2\u00f9\u00fa\7k\2\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7u"+
		"\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7c\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100"+
		"\7e\2\2\u0100\u0101\7g\2\2\u0101\u0102\7q\2\2\u0102\u0103\7h\2\2\u0103"+
		"$\3\2\2\2\u0104\u0105\7k\2\2\u0105\u0106\7p\2\2\u0106\u0107\7v\2\2\u0107"+
		"&\3\2\2\2\u0108\u0109\7e\2\2\u0109\u010a\7j\2\2\u010a\u010b\7c\2\2\u010b"+
		"\u010c\7t\2\2\u010c(\3\2\2\2\u010d\u010e\7x\2\2\u010e\u010f\7q\2\2\u010f"+
		"\u0110\7k\2\2\u0110\u0111\7f\2\2\u0111*\3\2\2\2\u0112\u0113\7d\2\2\u0113"+
		"\u0114\7q\2\2\u0114\u0115\7q\2\2\u0115\u0116\7n\2\2\u0116\u0117\7g\2\2"+
		"\u0117\u0118\7c\2\2\u0118\u0119\7p\2\2\u0119,\3\2\2\2\u011a\u011b\7u\2"+
		"\2\u011b\u011c\7v\2\2\u011c\u011d\7c\2\2\u011d\u011e\7v\2\2\u011e\u011f"+
		"\7k\2\2\u011f\u0120\7e\2\2\u0120.\3\2\2\2\u0121\u0122\7h\2\2\u0122\u0123"+
		"\7c\2\2\u0123\u0124\7n\2\2\u0124\u0125\7u\2\2\u0125\u0126\7g\2\2\u0126"+
		"\60\3\2\2\2\u0127\u0128\7v\2\2\u0128\u0129\7t\2\2\u0129\u012a\7w\2\2\u012a"+
		"\u012b\7g\2\2\u012b\62\3\2\2\2\u012c\u012d\5\u0089E\2\u012d\u012e\5I%"+
		"\2\u012e\64\3\2\2\2\u012f\u0130\7c\2\2\u0130\u0131\7d\2\2\u0131\u0132"+
		"\7v\2\2\u0132\u0133\7t\2\2\u0133\u0134\7c\2\2\u0134\u0135\7e\2\2\u0135"+
		"\u0136\7v\2\2\u0136\66\3\2\2\2\u0137\u0138\7g\2\2\u0138\u0139\7v\2\2\u0139"+
		"\u013a\7g\2\2\u013a\u013b\7p\2\2\u013b\u013c\7f\2\2\u013c\u0145\7u\2\2"+
		"\u013d\u013e\7g\2\2\u013e\u013f\7u\2\2\u013f\u0140\7v\2\2\u0140\u0141"+
		"\7g\2\2\u0141\u0142\7p\2\2\u0142\u0143\7f\2\2\u0143\u0145\7u\2\2\u0144"+
		"\u0137\3\2\2\2\u0144\u013d\3\2\2\2\u01458\3\2\2\2\u0146\u0147\7r\2\2\u0147"+
		"\u0148\7t\2\2\u0148\u0149\7k\2\2\u0149\u014a\7x\2\2\u014a\u014b\7v\2\2"+
		"\u014b\u014c\7g\2\2\u014c:\3\2\2\2\u014d\u014e\7e\2\2\u014e\u014f\7c\2"+
		"\2\u014f\u0150\7u\2\2\u0150\u0151\7u\2\2\u0151<\3\2\2\2\u0152\u0153\7"+
		"r\2\2\u0153\u0154\7t\2\2\u0154\u0155\7q\2\2\u0155\u0156\7v\2\2\u0156\u0157"+
		"\7g\2\2\u0157\u0160\7f\2\2\u0158\u0159\7r\2\2\u0159\u015a\7t\2\2\u015a"+
		"\u015b\7q\2\2\u015b\u015c\7e\2\2\u015c\u015d\7v\2\2\u015d\u015e\7g\2\2"+
		"\u015e\u0160\7f\2\2\u015f\u0152\3\2\2\2\u015f\u0158\3\2\2\2\u0160>\3\2"+
		"\2\2\u0161\u0162\7k\2\2\u0162\u0163\7h\2\2\u0163\u0168\7h\2\2\u0164\u0165"+
		"\7k\2\2\u0165\u0166\7k\2\2\u0166\u0168\7h\2\2\u0167\u0161\3\2\2\2\u0167"+
		"\u0164\3\2\2\2\u0168@\3\2\2\2\u0169\u016a\7y\2\2\u016a\u016b\7k\2\2\u016b"+
		"\u016c\7n\2\2\u016c\u0174\7g\2\2\u016d\u016e\7y\2\2\u016e\u016f\7j\2\2"+
		"\u016f\u0170\7k\2\2\u0170\u0171\7n\2\2\u0171\u0172\7n\2\2\u0172\u0174"+
		"\7g\2\2\u0173\u0169\3\2\2\2\u0173\u016d\3\2\2\2\u0174B\3\2\2\2\u0175\u0176"+
		"\7k\2\2\u0176\u0177\7p\2\2\u0177\u0178\7u\2\2\u0178\u0179\7v\2\2\u0179"+
		"\u017a\7c\2\2\u017a\u017b\7p\2\2\u017b\u017c\7e\2\2\u017c\u017d\7q\2\2"+
		"\u017d\u017e\7h\2\2\u017eD\3\2\2\2\u017f\u0180\7d\2\2\u0180\u0181\7q\2"+
		"\2\u0181\u0182\7q\2\2\u0182\u0183\7n\2\2\u0183F\3\2\2\2\u0184\u0187\5"+
		"\u008dG\2\u0185\u0187\5\u0089E\2\u0186\u0184\3\2\2\2\u0186\u0185\3\2\2"+
		"\2\u0187\u018a\3\2\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u01a1"+
		"\3\2\2\2\u018a\u0188\3\2\2\2\u018b\u01a2\5\3\2\2\u018c\u01a2\5\5\3\2\u018d"+
		"\u01a2\5\7\4\2\u018e\u01a2\5\t\5\2\u018f\u01a2\5\13\6\2\u0190\u01a2\5"+
		"\r\7\2\u0191\u01a2\5\17\b\2\u0192\u01a2\5\21\t\2\u0193\u01a2\5\23\n\2"+
		"\u0194\u01a2\5\25\13\2\u0195\u01a2\5\27\f\2\u0196\u01a2\5\31\r\2\u0197"+
		"\u01a2\5\33\16\2\u0198\u01a2\5\37\20\2\u0199\u01a2\5!\21\2\u019a\u01a2"+
		"\5#\22\2\u019b\u01a2\5\'\24\2\u019c\u01a2\5)\25\2\u019d\u01a2\5+\26\2"+
		"\u019e\u01a2\5-\27\2\u019f\u01a2\5/\30\2\u01a0\u01a2\5\61\31\2\u01a1\u018b"+
		"\3\2\2\2\u01a1\u018c\3\2\2\2\u01a1\u018d\3\2\2\2\u01a1\u018e\3\2\2\2\u01a1"+
		"\u018f\3\2\2\2\u01a1\u0190\3\2\2\2\u01a1\u0191\3\2\2\2\u01a1\u0192\3\2"+
		"\2\2\u01a1\u0193\3\2\2\2\u01a1\u0194\3\2\2\2\u01a1\u0195\3\2\2\2\u01a1"+
		"\u0196\3\2\2\2\u01a1\u0197\3\2\2\2\u01a1\u0198\3\2\2\2\u01a1\u0199\3\2"+
		"\2\2\u01a1\u019a\3\2\2\2\u01a1\u019b\3\2\2\2\u01a1\u019c\3\2\2\2\u01a1"+
		"\u019d\3\2\2\2\u01a1\u019e\3\2\2\2\u01a1\u019f\3\2\2\2\u01a1\u01a0\3\2"+
		"\2\2\u01a2\u01a4\3\2\2\2\u01a3\u01a5\5I%\2\u01a4\u01a3\3\2\2\2\u01a5\u01a6"+
		"\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7H\3\2\2\2\u01a8"+
		"\u01ab\5\u008dG\2\u01a9\u01ab\t\2\2\2\u01aa\u01a8\3\2\2\2\u01aa\u01a9"+
		"\3\2\2\2\u01ab\u01b1\3\2\2\2\u01ac\u01b0\5\u0089E\2\u01ad\u01b0\7a\2\2"+
		"\u01ae\u01b0\5\u008dG\2\u01af\u01ac\3\2\2\2\u01af\u01ad\3\2\2\2\u01af"+
		"\u01ae\3\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1\u01b2\3\2"+
		"\2\2\u01b2J\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4\u01b5\5\u0089E\2\u01b5\u01b6"+
		"\7\60\2\2\u01b6\u01b7\5\u0089E\2\u01b7\u01bd\3\2\2\2\u01b8\u01b9\5\u008b"+
		"F\2\u01b9\u01ba\7\60\2\2\u01ba\u01bb\5\u0089E\2\u01bb\u01bd\3\2\2\2\u01bc"+
		"\u01b4\3\2\2\2\u01bc\u01b8\3\2\2\2\u01bdL\3\2\2\2\u01be\u01bf\7?\2\2\u01bf"+
		"N\3\2\2\2\u01c0\u01c1\7-\2\2\u01c1\u01c2\7?\2\2\u01c2P\3\2\2\2\u01c3\u01c8"+
		"\5Y-\2\u01c4\u01c8\5[.\2\u01c5\u01c8\5W,\2\u01c6\u01c8\5]/\2\u01c7\u01c3"+
		"\3\2\2\2\u01c7\u01c4\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c7\u01c6\3\2\2\2\u01c8"+
		"R\3\2\2\2\u01c9\u01cd\5i\65\2\u01ca\u01cd\5e\63\2\u01cb\u01cd\5g\64\2"+
		"\u01cc\u01c9\3\2\2\2\u01cc\u01ca\3\2\2\2\u01cc\u01cb\3\2\2\2\u01cdT\3"+
		"\2\2\2\u01ce\u01d2\5a\61\2\u01cf\u01d2\5_\60\2\u01d0\u01d2\5c\62\2\u01d1"+
		"\u01ce\3\2\2\2\u01d1\u01cf\3\2\2\2\u01d1\u01d0\3\2\2\2\u01d2V\3\2\2\2"+
		"\u01d3\u01d4\7(\2\2\u01d4\u01d5\7(\2\2\u01d5X\3\2\2\2\u01d6\u01d7\7?\2"+
		"\2\u01d7\u01d8\7?\2\2\u01d8Z\3\2\2\2\u01d9\u01da\7@\2\2\u01da\\\3\2\2"+
		"\2\u01db\u01dc\7>\2\2\u01dc\u01dd\7?\2\2\u01dd^\3\2\2\2\u01de\u01df\7"+
		"-\2\2\u01df`\3\2\2\2\u01e0\u01e1\7/\2\2\u01e1b\3\2\2\2\u01e2\u01e3\7,"+
		"\2\2\u01e3d\3\2\2\2\u01e4\u01e5\7-\2\2\u01e5\u01e6\7-\2\2\u01e6f\3\2\2"+
		"\2\u01e7\u01e8\7/\2\2\u01e8\u01e9\7/\2\2\u01e9h\3\2\2\2\u01ea\u01eb\7"+
		"#\2\2\u01ebj\3\2\2\2\u01ec\u01ed\7]\2\2\u01edl\3\2\2\2\u01ee\u01ef\7_"+
		"\2\2\u01efn\3\2\2\2\u01f0\u01f1\7}\2\2\u01f1p\3\2\2\2\u01f2\u01f3\7\177"+
		"\2\2\u01f3r\3\2\2\2\u01f4\u01f5\7*\2\2\u01f5t\3\2\2\2\u01f6\u01f7\7+\2"+
		"\2\u01f7v\3\2\2\2\u01f8\u01fc\7$\2\2\u01f9\u01fb\n\3\2\2\u01fa\u01f9\3"+
		"\2\2\2\u01fb\u01fe\3\2\2\2\u01fc\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd"+
		"\u01ff\3\2\2\2\u01fe\u01fc\3\2\2\2\u01ff\u0200\7$\2\2\u0200x\3\2\2\2\u0201"+
		"\u0202\7=\2\2\u0202z\3\2\2\2\u0203\u0204\7\60\2\2\u0204|\3\2\2\2\u0205"+
		"\u0206\7.\2\2\u0206~\3\2\2\2\u0207\u0209\7\17\2\2\u0208\u0207\3\2\2\2"+
		"\u0208\u0209\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u020d\7\f\2\2\u020b\u020d"+
		"\7\17\2\2\u020c\u0208\3\2\2\2\u020c\u020b\3\2\2\2\u020d\u020e\3\2\2\2"+
		"\u020e\u020c\3\2\2\2\u020e\u020f\3\2\2\2\u020f\u0080\3\2\2\2\u0210\u0212"+
		"\t\4\2\2\u0211\u0210\3\2\2\2\u0212\u0213\3\2\2\2\u0213\u0211\3\2\2\2\u0213"+
		"\u0214\3\2\2\2\u0214\u0215\3\2\2\2\u0215\u0216\bA\2\2\u0216\u0082\3\2"+
		"\2\2\u0217\u0218\7\61\2\2\u0218\u0219\7\61\2\2\u0219\u021d\3\2\2\2\u021a"+
		"\u021c\n\5\2\2\u021b\u021a\3\2\2\2\u021c\u021f\3\2\2\2\u021d\u021b\3\2"+
		"\2\2\u021d\u021e\3\2\2\2\u021e\u0220\3\2\2\2\u021f\u021d\3\2\2\2\u0220"+
		"\u0221\bB\2\2\u0221\u0084\3\2\2\2\u0222\u0223\4c|\2\u0223\u0086\3\2\2"+
		"\2\u0224\u0225\4C\\\2\u0225\u0088\3\2\2\2\u0226\u022a\7-\2\2\u0227\u0228"+
		"\7\"\2\2\u0228\u022a\7/\2\2\u0229\u0226\3\2\2\2\u0229\u0227\3\2\2\2\u0229"+
		"\u022a\3\2\2\2\u022a\u022c\3\2\2\2\u022b\u022d\4\62;\2\u022c\u022b\3\2"+
		"\2\2\u022d\u022e\3\2\2\2\u022e\u022c\3\2\2\2\u022e\u022f\3\2\2\2\u022f"+
		"\u008a\3\2\2\2\u0230\u0231\7/\2\2\u0231\u0232\5\u0089E\2\u0232\u008c\3"+
		"\2\2\2\u0233\u0236\5\u0085C\2\u0234\u0236\5\u0087D\2\u0235\u0233\3\2\2"+
		"\2\u0235\u0234\3\2\2\2\u0236\u0237\3\2\2\2\u0237\u0235\3\2\2\2\u0237\u0238"+
		"\3\2\2\2\u0238\u008e\3\2\2\2\u0239\u023d\5\7\4\2\u023a\u023d\5\13\6\2"+
		"\u023b\u023d\5\t\5\2\u023c\u0239\3\2\2\2\u023c\u023a\3\2\2\2\u023c\u023b"+
		"\3\2\2\2\u023d\u0090\3\2\2\2\35\2\u0144\u015f\u0167\u0173\u0186\u0188"+
		"\u01a1\u01a6\u01aa\u01af\u01b1\u01bc\u01c7\u01cc\u01d1\u01fc\u0208\u020c"+
		"\u020e\u0213\u021d\u0229\u022e\u0235\u0237\u023c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}